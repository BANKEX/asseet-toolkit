{
  "contractName": "MultiVendingToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "acceptDividends",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "dividendsRightsFix",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "releaseDividendsRights",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "dividendsRightsOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_for",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ReleaseDividendsRights",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "AcceptDividends",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_for",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "releaseDividendsRightsForce",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600d81526020017f56656e64696e6720546f6b656e00000000000000000000000000000000000000815250600690805190602001906200005192919062000103565b506040805190810160405280600481526020017f56454e4400000000000000000000000000000000000000000000000000000000815250600790805190602001906200009f92919062000103565b506012600860006101000a81548160ff021916908360ff16021790555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001b2565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200014657805160ff191683800117855562000177565b8280016001018555821562000177579182015b828111156200017657825182559160200191906001019062000159565b5b5090506200018691906200018a565b5090565b620001af91905b80821115620001ab57600081600090555060010162000191565b5090565b90565b611c1980620001c26000396000f300608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010c5780630d550b751461019c5780631c0f12b61461021d578063313ce567146102ac57806331580446146102dd5780633656eec2146102fd5780634832999a1461035e5780637ba47d9a146103bf5780638cb0a5111461040e5780638da5cb5b1461047d57806395d89b41146104d4578063a5843f0814610564578063bb88c0161461059b578063bd85b0391461060a578063c9101f6c1461064b578063c9a0ab7e146106ba578063f2fde38b1461071b578063f8548e361461075e578063ff6350fc146107cd575b600080fd5b34801561011857600080fd5b5061012161083c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610161578082015181840152602081019050610146565b50505050905090810190601f16801561018e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a857600080fd5b5061020760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108da565b6040518082815260200191505060405180910390f35b34801561022957600080fd5b5061029260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610972565b604051808215151515815260200191505060405180910390f35b3480156102b857600080fd5b506102c1610996565b604051808260ff1660ff16815260200191505060405180910390f35b6102fb600480360381019080803590602001909291905050506109a9565b005b34801561030957600080fd5b5061034860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ab7565b6040518082815260200191505060405180910390f35b34801561036a57600080fd5b506103a960048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b12565b6040518082815260200191505060405180910390f35b3480156103cb57600080fd5b506103f46004803603810190808035906020019092919080359060200190929190505050610b37565b604051808215151515815260200191505060405180910390f35b34801561041a57600080fd5b5061046360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b4c565b604051808215151515815260200191505060405180910390f35b34801561048957600080fd5b50610492610c55565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e057600080fd5b506104e9610c7b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561052957808201518184015260208101905061050e565b50505050905090810190601f1680156105565780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561057057600080fd5b506105996004803603810190808035906020019092919080359060200190929190505050610d19565b005b3480156105a757600080fd5b506105f060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb3565b604051808215151515815260200191505060405180910390f35b34801561061657600080fd5b5061063560048036038101908080359060200190929190505050611075565b6040518082815260200191505060405180910390f35b34801561065757600080fd5b506106a060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611092565b604051808215151515815260200191505060405180910390f35b3480156106c657600080fd5b5061070560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611242565b6040518082815260200191505060405180910390f35b34801561072757600080fd5b5061075c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061132c565b005b34801561076a57600080fd5b506107b360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611484565b604051808215151515815260200191505060405180910390f35b3480156107d957600080fd5b5061082260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114a7565b604051808215151515815260200191505060405180910390f35b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108d25780601f106108a7576101008083540402835291602001916108d2565b820191906000526020600020905b8154815290600101906020018083116108b557829003601f168201915b505050505081565b600080600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509392505050565b600061098085858585611519565b61098c858585856116fb565b9050949350505050565b600860009054906101000a900460ff1681565b60008060046000848152602001908152602001600020549150600260008481526020019081526020016000205490506000811115156109e757600080fd5b610a1f81610a06670de0b6b3a76400003461185690919063ffffffff16565b811515610a0f57fe5b048361189190919063ffffffff16565b91507f4000000000000000000000000000000000000000000000000000000000000000610a55828461185690919063ffffffff16565b11151515610a6257600080fd5b816004600085815260200190815260200160002081905550827fd67b9f17de339ee296f5a26fdca83960c71ebf124ba2e5a9ded6780a7d2e3083346040518082815260200191505060405180910390a2505050565b60006001600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6003602052816000526040600020602052806000526040600020600091509150505481565b6000610b448333846118af565b905092915050565b6000803390508260008087815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16867f69e4aaf23f9318cf40839ac20453d8fbedaac2955eb08a27ae5189cc71925716866040518082815260200191505060405180910390a460019150509392505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d115780601f10610ce657610100808354040283529160200191610d11565b820191906000526020600020905b815481529060010190602001808311610cf457829003601f168201915b505050505081565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d7557600080fd5b60006002600084815260200190815260200160002054141515610d9757600080fd5b80600160008481526020019081526020016000206000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806002600084815260200190815260200160002081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff16837ff2dbd98d79f00f7aff338b824931d607bfcc63d47307162470f25a055102d3b0846040518082815260200191505060405180910390a45050565b600080600033915060008087815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080841115610f5b5760009050610f71565b610f6e84826119cd90919063ffffffff16565b90505b8060008088815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16877f69e4aaf23f9318cf40839ac20453d8fbedaac2955eb08a27ae5189cc71925716846040518082815260200191505060405180910390a46001925050509392505050565b600060026000838152602001908152602001600020549050919050565b600080600033915060008087815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061113c848261189190919063ffffffff16565b90508060008088815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16877f69e4aaf23f9318cf40839ac20453d8fbedaac2955eb08a27ae5189cc71925716846040518082815260200191505060405180910390a46001925050509392505050565b6000806003600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a76400006001600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460046000888152602001908152602001600020540281151561130e57fe5b04019050600081126113205780611323565b60005b91505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561138857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156113c457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061149284338585611519565b61149e843385856119e6565b90509392505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561150557600080fd5b6115108484846118af565b90509392505050565b6000806000600460008881526020019081526020016000205492506001600088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491506001600088815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050670de0b6b3a764000084830384028115156115f157fe5b04670de0b6b3a764000083850281151561160757fe5b04036003600089815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550670de0b6b3a7640000848201840281151561167d57fe5b04670de0b6b3a764000082850281151561169357fe5b04036003600089815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050505050505050565b60008060008087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115151561179c57600080fd5b6117af83826119cd90919063ffffffff16565b60008088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061184b868686866119e6565b915050949350505050565b600080600084141561186b576000915061188a565b828402905082848281151561187c57fe5b0414151561188657fe5b8091505b5092915050565b60008082840190508381101515156118a557fe5b8091505092915050565b6000806118bc8585611242565b90508281101515156118cd57600080fd5b826003600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015611971573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff16857fffc571bbe3cdbbb34d3a90d6cf9470b649a896b44cf27c4d6361802601ead7bb856040518082815260200191505060405180910390a360019150509392505050565b60008282111515156119db57fe5b818303905092915050565b6000806000806001600089815260200190815260200160002092508260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491508260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515611abf57600080fd5b818511151515611ace57600080fd5b611ae185836119cd90919063ffffffff16565b8360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b36858261189190919063ffffffff16565b8360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16897ff2dbd98d79f00f7aff338b824931d607bfcc63d47307162470f25a055102d3b0886040518082815260200191505060405180910390a4600193505050509493505050505600a165627a7a72305820d052cf1c5ecbafaf2fe946fe14afcc757d956ffe86e47187bc73ca7dbf3481e40029",
  "deployedBytecode": "0x608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010c5780630d550b751461019c5780631c0f12b61461021d578063313ce567146102ac57806331580446146102dd5780633656eec2146102fd5780634832999a1461035e5780637ba47d9a146103bf5780638cb0a5111461040e5780638da5cb5b1461047d57806395d89b41146104d4578063a5843f0814610564578063bb88c0161461059b578063bd85b0391461060a578063c9101f6c1461064b578063c9a0ab7e146106ba578063f2fde38b1461071b578063f8548e361461075e578063ff6350fc146107cd575b600080fd5b34801561011857600080fd5b5061012161083c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610161578082015181840152602081019050610146565b50505050905090810190601f16801561018e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a857600080fd5b5061020760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108da565b6040518082815260200191505060405180910390f35b34801561022957600080fd5b5061029260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610972565b604051808215151515815260200191505060405180910390f35b3480156102b857600080fd5b506102c1610996565b604051808260ff1660ff16815260200191505060405180910390f35b6102fb600480360381019080803590602001909291905050506109a9565b005b34801561030957600080fd5b5061034860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ab7565b6040518082815260200191505060405180910390f35b34801561036a57600080fd5b506103a960048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b12565b6040518082815260200191505060405180910390f35b3480156103cb57600080fd5b506103f46004803603810190808035906020019092919080359060200190929190505050610b37565b604051808215151515815260200191505060405180910390f35b34801561041a57600080fd5b5061046360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b4c565b604051808215151515815260200191505060405180910390f35b34801561048957600080fd5b50610492610c55565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e057600080fd5b506104e9610c7b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561052957808201518184015260208101905061050e565b50505050905090810190601f1680156105565780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561057057600080fd5b506105996004803603810190808035906020019092919080359060200190929190505050610d19565b005b3480156105a757600080fd5b506105f060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb3565b604051808215151515815260200191505060405180910390f35b34801561061657600080fd5b5061063560048036038101908080359060200190929190505050611075565b6040518082815260200191505060405180910390f35b34801561065757600080fd5b506106a060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611092565b604051808215151515815260200191505060405180910390f35b3480156106c657600080fd5b5061070560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611242565b6040518082815260200191505060405180910390f35b34801561072757600080fd5b5061075c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061132c565b005b34801561076a57600080fd5b506107b360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611484565b604051808215151515815260200191505060405180910390f35b3480156107d957600080fd5b5061082260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114a7565b604051808215151515815260200191505060405180910390f35b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108d25780601f106108a7576101008083540402835291602001916108d2565b820191906000526020600020905b8154815290600101906020018083116108b557829003601f168201915b505050505081565b600080600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509392505050565b600061098085858585611519565b61098c858585856116fb565b9050949350505050565b600860009054906101000a900460ff1681565b60008060046000848152602001908152602001600020549150600260008481526020019081526020016000205490506000811115156109e757600080fd5b610a1f81610a06670de0b6b3a76400003461185690919063ffffffff16565b811515610a0f57fe5b048361189190919063ffffffff16565b91507f4000000000000000000000000000000000000000000000000000000000000000610a55828461185690919063ffffffff16565b11151515610a6257600080fd5b816004600085815260200190815260200160002081905550827fd67b9f17de339ee296f5a26fdca83960c71ebf124ba2e5a9ded6780a7d2e3083346040518082815260200191505060405180910390a2505050565b60006001600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6003602052816000526040600020602052806000526040600020600091509150505481565b6000610b448333846118af565b905092915050565b6000803390508260008087815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16867f69e4aaf23f9318cf40839ac20453d8fbedaac2955eb08a27ae5189cc71925716866040518082815260200191505060405180910390a460019150509392505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d115780601f10610ce657610100808354040283529160200191610d11565b820191906000526020600020905b815481529060010190602001808311610cf457829003601f168201915b505050505081565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d7557600080fd5b60006002600084815260200190815260200160002054141515610d9757600080fd5b80600160008481526020019081526020016000206000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806002600084815260200190815260200160002081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff16837ff2dbd98d79f00f7aff338b824931d607bfcc63d47307162470f25a055102d3b0846040518082815260200191505060405180910390a45050565b600080600033915060008087815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080841115610f5b5760009050610f71565b610f6e84826119cd90919063ffffffff16565b90505b8060008088815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16877f69e4aaf23f9318cf40839ac20453d8fbedaac2955eb08a27ae5189cc71925716846040518082815260200191505060405180910390a46001925050509392505050565b600060026000838152602001908152602001600020549050919050565b600080600033915060008087815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061113c848261189190919063ffffffff16565b90508060008088815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16877f69e4aaf23f9318cf40839ac20453d8fbedaac2955eb08a27ae5189cc71925716846040518082815260200191505060405180910390a46001925050509392505050565b6000806003600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a76400006001600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460046000888152602001908152602001600020540281151561130e57fe5b04019050600081126113205780611323565b60005b91505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561138857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156113c457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061149284338585611519565b61149e843385856119e6565b90509392505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561150557600080fd5b6115108484846118af565b90509392505050565b6000806000600460008881526020019081526020016000205492506001600088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491506001600088815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050670de0b6b3a764000084830384028115156115f157fe5b04670de0b6b3a764000083850281151561160757fe5b04036003600089815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550670de0b6b3a7640000848201840281151561167d57fe5b04670de0b6b3a764000082850281151561169357fe5b04036003600089815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050505050505050565b60008060008087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115151561179c57600080fd5b6117af83826119cd90919063ffffffff16565b60008088815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061184b868686866119e6565b915050949350505050565b600080600084141561186b576000915061188a565b828402905082848281151561187c57fe5b0414151561188657fe5b8091505b5092915050565b60008082840190508381101515156118a557fe5b8091505092915050565b6000806118bc8585611242565b90508281101515156118cd57600080fd5b826003600087815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015611971573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff16857fffc571bbe3cdbbb34d3a90d6cf9470b649a896b44cf27c4d6361802601ead7bb856040518082815260200191505060405180910390a360019150509392505050565b60008282111515156119db57fe5b818303905092915050565b6000806000806001600089815260200190815260200160002092508260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491508260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515611abf57600080fd5b818511151515611ace57600080fd5b611ae185836119cd90919063ffffffff16565b8360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b36858261189190919063ffffffff16565b8360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16897ff2dbd98d79f00f7aff338b824931d607bfcc63d47307162470f25a055102d3b0886040518082815260200191505060405180910390a4600193505050509493505050505600a165627a7a72305820d052cf1c5ecbafaf2fe946fe14afcc757d956ffe86e47187bc73ca7dbf3481e40029",
  "sourceMap": "119:1001:1:-;;;231:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;272:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;330:2;306:26;;;;;;;;;;;;;;;;;;;;529:10:3;521:5;;:18;;;;;;;;;;;;;;;;;;119:1001:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "119:1001:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4398:8:4;;;231:36:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;231:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;231:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1336:150:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1336:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3613:228:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3613:228:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;306:26:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;306:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;3889:469:4;;;;;;;;;;;;;;;;;;;;;;;;;;870:123:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;870:123:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:68:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;421:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1823:154:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4411:253:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4411:253:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;272:29:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;272:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;873:242;;8:9:-1;5:2;;;30:1;27;20:12;5:2;873:242:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5618:467:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5618:467:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;532:105:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4951:371;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4951:371:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:278:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;810:278:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:178:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;867:178:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;3083:212:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3083:212:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;519:177:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:177:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;231:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1336:150:6:-;1425:4;1445:7;:17;1453:8;1445:17;;;;;;;;;;;:25;1463:6;1445:25;;;;;;;;;;;;;;;:35;1471:8;1445:35;;;;;;;;;;;;;;;;1438:42;;1336:150;;;;;:::o;3613:228:4:-;3707:4;3720:55;3746:8;3756:5;3763:3;3768:6;3720:25;:55::i;:::-;3789:46;3806:8;3816:5;3823:3;3828:6;3789:16;:46::i;:::-;3782:53;;3613:228;;;;;;:::o;306:26:1:-;;;;;;;;;;;;;:::o;3889:469:4:-;3951:23;4011:17;3977;:27;3995:8;3977:27;;;;;;;;;;;;3951:53;;4031:12;:22;4044:8;4031:22;;;;;;;;;;;;4011:42;;4083:1;4068:12;:16;4060:25;;;;;;;;4113:70;4170:12;4136:33;362:8;4136:9;:13;;:33;;;;:::i;:::-;:46;;;;;;;;4113:18;:22;;:70;;;;:::i;:::-;4092:91;;402:12;4198:36;4221:12;4198:18;:22;;:36;;;;:::i;:::-;:50;;4190:59;;;;;;;;4286:18;4256:17;:27;4274:8;4256:27;;;;;;;;;;;:48;;;;4332:8;4316:36;4342:9;4316:36;;;;;;;;;;;;;;;;;;3889:469;;;:::o;870:123:6:-;941:4;961:8;:18;970:8;961:18;;;;;;;;;;;:26;980:6;961:26;;;;;;;;;;;;;;;;954:33;;870:123;;;;:::o;421:68:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1823:154::-;1898:4;1918:53;1942:8;1952:10;1964:6;1918:23;:53::i;:::-;1911:60;;1823:154;;;;:::o;4411:253:6:-;4490:4;4503:15;4521:10;4503:28;;4577:6;4538:7;:17;4546:8;4538:17;;;;;;;;;;;:26;4556:7;4538:26;;;;;;;;;;;;;;;:36;4565:8;4538:36;;;;;;;;;;;;;;;:45;;;;4623:8;4595:45;;4614:7;4595:45;;4604:8;4595:45;4633:6;4595:45;;;;;;;;;;;;;;;;;;4654:4;4647:11;;4411:253;;;;;;:::o;247:20:3:-;;;;;;;;;;;;;:::o;272:29:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;873:242::-;680:5:3;;;;;;;;;;;666:19;;:10;:19;;;658:28;;;;;;;;971:1:1;947:12;:22;960:8;947:22;;;;;;;;;;;;:25;939:34;;;;;;;;1008:6;980:8;:18;989:8;980:18;;;;;;;;;;;:25;999:5;;;;;;;;;;;980:25;;;;;;;;;;;;;;;:34;;;;1046:6;1021:12;:22;1034:8;1021:22;;;;;;;;;;;:31;;;;1095:5;;;;;;;;;;;1064:45;;1091:1;1064:45;;1073:8;1064:45;1102:6;1064:45;;;;;;;;;;;;;;;;;;873:242;;:::o;5618:467:6:-;5716:4;5729:15;5764:13;5747:10;5729:28;;5780:7;:17;5788:8;5780:17;;;;;;;;;;;:26;5798:7;5780:26;;;;;;;;;;;;;;;:36;5807:8;5780:36;;;;;;;;;;;;;;;;5764:52;;5846:8;5827:16;:27;5823:126;;;5876:1;5865:12;;5823:126;;;5911:30;5924:16;5911:8;:12;;:30;;;;:::i;:::-;5900:41;;5823:126;5994:8;5955:7;:17;5963:8;5955:17;;;;;;;;;;;:26;5973:7;5955:26;;;;;;;;;;;;;;;:36;5982:8;5955:36;;;;;;;;;;;;;;;:47;;;;6042:8;6014:47;;6033:7;6014:47;;6023:8;6014:47;6052:8;6014:47;;;;;;;;;;;;;;;;;;6075:4;6068:11;;5618:467;;;;;;;:::o;532:105::-;589:4;609:12;:22;622:8;609:22;;;;;;;;;;;;602:29;;532:105;;;:::o;4951:371::-;5044:4;5057:15;5092:13;5075:10;5057:28;;5108:7;:17;5116:8;5108:17;;;;;;;;;;;:26;5126:7;5108:26;;;;;;;;;;;;;;;:36;5135:8;5108:36;;;;;;;;;;;;;;;;5092:52;;5160:25;5173:11;5160:8;:12;;:25;;;;:::i;:::-;5151:34;;5231:8;5192:7;:17;5200:8;5192:17;;;;;;;;;;;:26;5210:7;5192:26;;;;;;;;;;;;;;;:36;5219:8;5192:36;;;;;;;;;;;;;;;:47;;;;5279:8;5251:47;;5270:7;5251:47;;5260:8;5251:47;5289:8;5251:47;;;;;;;;;;;;;;;;;;5312:4;5305:11;;4951:371;;;;;;;:::o;810:278:4:-;889:12;910:11;1004:18;:28;1023:8;1004:28;;;;;;;;;;;:36;1033:6;1004:36;;;;;;;;;;;;;;;;362:8;954;:18;963:8;954:18;;;;;;;;;;;:26;973:6;954:26;;;;;;;;;;;;;;;;924:17;:27;942:8;924:27;;;;;;;;;;;;:56;:77;;;;;;;;:116;910:130;;1068:1;1058:6;1054:15;:28;;1076:6;1054:28;;;1072:1;1054:28;1047:35;;810:278;;;;;:::o;867:178:3:-;680:5;;;;;;;;;;;666:19;;:10;:19;;;658:28;;;;;;;;964:1;944:22;;:8;:22;;;;936:31;;;;;;;;1007:8;979:37;;1000:5;;;;;;;;;;;979:37;;;;;;;;;;;;1031:8;1023:5;;:16;;;;;;;;;;;;;;;;;;867:178;:::o;3083:212:4:-;3158:4;3171:60;3197:8;3207:10;3219:3;3224:6;3171:25;:60::i;:::-;3245:44;3255:8;3265:10;3277:3;3282:6;3245:9;:44::i;:::-;3238:51;;3083:212;;;;;:::o;519:177:1:-;623:4;680:5:3;;;;;;;;;;;666:19;;:10;:19;;;658:28;;;;;;;;643:47:1;667:8;677:4;683:6;643:23;:47::i;:::-;636:54;;519:177;;;;;:::o;2277:596:4:-;2383:23;2443:17;2495:15;2409:17;:27;2427:8;2409:27;;;;;;;;;;;;2383:53;;2463:8;:18;2472:8;2463:18;;;;;;;;;;;:25;2482:5;2463:25;;;;;;;;;;;;;;;;2443:45;;2513:8;:18;2522:8;2513:18;;;;;;;;;;;:23;2532:3;2513:23;;;;;;;;;;;;;;;;2495:41;;362:8;2676:6;2661:12;:21;2639:18;:44;:65;;;;;;;;362:8;2603:12;2582:18;:33;:54;;;;;;;;:122;2543:18;:28;2562:8;2543:28;;;;;;;;;;;:35;2572:5;2543:35;;;;;;;;;;;;;;;;:161;;;;;;;;;;;362:8;2838:6;2825:10;:19;2803:18;:42;:63;;;;;;;;362:8;2769:10;2748:18;:31;:52;;;;;;;;:118;2711:18;:28;2730:8;2711:28;;;;;;;;;;;:33;2740:3;2711:33;;;;;;;;;;;;;;;;:155;;;;;;;;;;;2277:596;;;;;;;:::o;2932:324:6:-;3032:4;3045:13;3061:7;:17;3069:8;3061:17;;;;;;;;;;;:24;3079:5;3061:24;;;;;;;;;;;;;;;:36;3086:10;3061:36;;;;;;;;;;;;;;;;3045:52;;3122:8;3112:6;:18;;3104:27;;;;;;;;3177:20;3190:6;3177:8;:12;;:20;;;;:::i;:::-;3138:7;:17;3146:8;3138:17;;;;;;;;;;;:24;3156:5;3138:24;;;;;;;;;;;;;;;:36;3163:10;3138:36;;;;;;;;;;;;;;;:59;;;;3211:39;3221:8;3231:5;3238:3;3243:6;3211:9;:39::i;:::-;3204:46;;2932:324;;;;;;;:::o;145:166:2:-;203:7;253:9;226:1;221;:6;217:32;;;242:1;235:8;;;;217:32;269:1;265;:5;253:17;;291:1;286;282;:5;;;;;;;;:10;275:18;;;;;;305:1;298:8;;145:166;;;;;;:::o;695:126::-;753:7;767:9;783:1;779;:5;767:17;;801:1;796;:6;;789:14;;;;;;815:1;808:8;;695:126;;;;;:::o;1293:371:4:-;1385:4;1398:21;1422:33;1440:8;1450:4;1422:17;:33::i;:::-;1398:57;;1490:6;1470:16;:26;;1462:35;;;;;;;;1542:6;1504:18;:28;1523:8;1504:28;;;;;;;;;;;:34;1533:4;1504:34;;;;;;;;;;;;;;;;:44;;;;;;;;;;;1555:10;:19;;:27;1575:6;1555:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1555:27:4;1627:4;1594:46;;1617:8;1594:46;1633:6;1594:46;;;;;;;;;;;;;;;;;;1654:4;1647:11;;1293:371;;;;;;:::o;582:108:2:-;640:7;666:1;661;:6;;654:14;;;;;;684:1;680;:5;673:12;;582:108;;;;:::o;2143:454:6:-;2236:4;2249:34;2311:11;2348:9;2286:8;:18;2295:8;2286:18;;;;;;;;;;;2249:55;;2325:9;:16;2335:5;2325:16;;;;;;;;;;;;;;;;2311:30;;2360:9;:14;2370:3;2360:14;;;;;;;;;;;;;;;;2348:26;;2404:1;2389:17;;:3;:17;;;;2381:26;;;;;;;;2432:6;2422;:16;;2414:25;;;;;;;;2465:18;2476:6;2465;:10;;:18;;;;:::i;:::-;2446:9;:16;2456:5;2446:16;;;;;;;;;;;;;;;:37;;;;2507:16;2516:6;2507:4;:8;;:16;;;;:::i;:::-;2490:9;:14;2500:3;2490:14;;;;;;;;;;;;;;;:33;;;;2561:3;2535:38;;2554:5;2535:38;;2544:8;2535:38;2566:6;2535:38;;;;;;;;;;;;;;;;;;2587:4;2580:11;;2143:454;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\r\nimport \"../token/multiToken/MultiDividendsToken.sol\";\r\nimport \"../ownership/Ownable.sol\";\r\n\r\ncontract MultiVendingToken is MultiDividendsToken, Ownable {\r\n  uint constant DECIMAL_MULTIPLIER = 10 ** 18;\r\n  string public name = \"Vending Token\";\r\n  string public symbol = \"VEND\";\r\n  uint8 public decimals = 18;\r\n\r\n  /**\r\n  * @dev release dividends rights for a specified address\r\n  * @param _for The address to transfer for.\r\n  * @param _value The amount of dividends to be transferred.\r\n  */\r\n  function releaseDividendsRightsForce(uint _tokenId, address _for, uint _value) public onlyOwner returns(bool) {\r\n    return releaseDividendsRights_(_tokenId, _for, _value);\r\n  }\r\n\r\n  /**\r\n  * @dev release dividends rights for a specified address\r\n  * @param _tokenId subtoken identifier\r\n  * @param _value uint the amount of tokens to be minted\r\n  */\r\n  function init(uint _tokenId, uint _value) onlyOwner public {\r\n    require(totalSupply_[_tokenId]==0);\r\n    balances[_tokenId][owner] = _value;\r\n    totalSupply_[_tokenId] = _value;\r\n    emit Transfer(_tokenId, address(0), owner, _value);\r\n  }\r\n\r\n}",
  "sourcePath": "C:\\Work\\Projects\\multi_token\\contracts\\custom\\MultiVendingToken.sol",
  "ast": {
    "absolutePath": "/C/Work/Projects/multi_token/contracts/custom/MultiVendingToken.sol",
    "exportedSymbols": {
      "MultiVendingToken": [
        86
      ]
    },
    "id": 87,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/C/Work/Projects/multi_token/contracts/token/multiToken/MultiDividendsToken.sol",
        "file": "../token/multiToken/MultiDividendsToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 87,
        "sourceUnit": 578,
        "src": "26:53:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Work/Projects/multi_token/contracts/ownership/Ownable.sol",
        "file": "../ownership/Ownable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 87,
        "sourceUnit": 241,
        "src": "81:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "MultiDividendsToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 577,
              "src": "149:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MultiDividendsToken_$577",
                "typeString": "contract MultiDividendsToken"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "149:19:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 240,
              "src": "170:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$240",
                "typeString": "contract Ownable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "170:7:1"
          }
        ],
        "contractDependencies": [
          240,
          577,
          615,
          1011,
          1096
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 86,
        "linearizedBaseContracts": [
          86,
          240,
          577,
          1011,
          615,
          1096
        ],
        "name": "MultiVendingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 15,
            "name": "DECIMAL_MULTIPLIER",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "183:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "183:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 12,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "218:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 13,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "224:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "218:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "231:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "231:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "56656e64696e6720546f6b656e",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "252:15:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_97f514c78053a7907d89adc0fa6fdcdce296502826afc37a52514becad57e485",
                "typeString": "literal_string \"Vending Token\""
              },
              "value": "Vending Token"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "272:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 19,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "272:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "56454e44",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "295:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_9d1b078f7114f0ab2b9faefe194036e0f205c0f523c301c7960773b462556e4e",
                "typeString": "literal_string \"VEND\""
              },
              "value": "VEND"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "306:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 22,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "306:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "330:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "629:67:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "667:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "_for",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "677:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "683:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37,
                      "name": "releaseDividendsRights_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "643:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,address,uint256) returns (bool)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "643:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 36,
                  "id": 42,
                  "nodeType": "Return",
                  "src": "636:54:1"
                }
              ]
            },
            "documentation": "@dev release dividends rights for a specified address\r\n@param _for The address to transfer for.\r\n@param _value The amount of dividends to be transferred.\r",
            "id": 44,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 33,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 32,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 214,
                  "src": "605:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "605:9:1"
              }
            ],
            "name": "releaseDividendsRightsForce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "556:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "name": "_for",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "571:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "585:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "555:42:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "623:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "622:6:1"
            },
            "scope": 86,
            "src": "519:177:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "932:183:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "totalSupply_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "947:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 56,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "960:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "947:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "971:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "947:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1114,
                        1115
                      ],
                      "referencedDeclaration": 1114,
                      "src": "939:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "939:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "939:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "980:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "989:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "980:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 65,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "999:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "980:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1008:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "980:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "980:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "totalSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "1021:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1034:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1021:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1046:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1021:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:31:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1073:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1091:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1083:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1083:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "1095:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1102:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "1064:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "EmitStatement",
                  "src": "1059:50:1"
                }
              ]
            },
            "documentation": "@dev release dividends rights for a specified address\r\n@param _tokenId subtoken identifier\r\n@param _value uint the amount of tokens to be minted\r",
            "id": 85,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 51,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 50,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 214,
                  "src": "915:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "915:9:1"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "887:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "902:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "886:28:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "932:0:1"
            },
            "scope": 86,
            "src": "873:242:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 87,
        "src": "119:1001:1"
      }
    ],
    "src": "0:1120:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Work/Projects/multi_token/contracts/custom/MultiVendingToken.sol",
    "exportedSymbols": {
      "MultiVendingToken": [
        86
      ]
    },
    "id": 87,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/C/Work/Projects/multi_token/contracts/token/multiToken/MultiDividendsToken.sol",
        "file": "../token/multiToken/MultiDividendsToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 87,
        "sourceUnit": 578,
        "src": "26:53:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Work/Projects/multi_token/contracts/ownership/Ownable.sol",
        "file": "../ownership/Ownable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 87,
        "sourceUnit": 241,
        "src": "81:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "MultiDividendsToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 577,
              "src": "149:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MultiDividendsToken_$577",
                "typeString": "contract MultiDividendsToken"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "149:19:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 240,
              "src": "170:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$240",
                "typeString": "contract Ownable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "170:7:1"
          }
        ],
        "contractDependencies": [
          240,
          577,
          615,
          1011,
          1096
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 86,
        "linearizedBaseContracts": [
          86,
          240,
          577,
          1011,
          615,
          1096
        ],
        "name": "MultiVendingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 15,
            "name": "DECIMAL_MULTIPLIER",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "183:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "183:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 12,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "218:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 13,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "224:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "218:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "231:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "231:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "56656e64696e6720546f6b656e",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "252:15:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_97f514c78053a7907d89adc0fa6fdcdce296502826afc37a52514becad57e485",
                "typeString": "literal_string \"Vending Token\""
              },
              "value": "Vending Token"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "272:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 19,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "272:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "56454e44",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "295:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_9d1b078f7114f0ab2b9faefe194036e0f205c0f523c301c7960773b462556e4e",
                "typeString": "literal_string \"VEND\""
              },
              "value": "VEND"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 86,
            "src": "306:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 22,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "306:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "330:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "629:67:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "667:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "_for",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "677:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "683:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37,
                      "name": "releaseDividendsRights_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "643:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,address,uint256) returns (bool)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "643:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 36,
                  "id": 42,
                  "nodeType": "Return",
                  "src": "636:54:1"
                }
              ]
            },
            "documentation": "@dev release dividends rights for a specified address\r\n@param _for The address to transfer for.\r\n@param _value The amount of dividends to be transferred.\r",
            "id": 44,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 33,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 32,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 214,
                  "src": "605:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "605:9:1"
              }
            ],
            "name": "releaseDividendsRightsForce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "556:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "name": "_for",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "571:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "585:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "555:42:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "623:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "622:6:1"
            },
            "scope": 86,
            "src": "519:177:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "932:183:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 54,
                            "name": "totalSupply_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "947:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 56,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "960:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "947:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "971:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "947:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1114,
                        1115
                      ],
                      "referencedDeclaration": 1114,
                      "src": "939:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "939:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "939:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "980:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "989:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "980:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 65,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "999:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "980:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1008:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "980:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "980:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "totalSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "1021:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1034:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1021:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1046:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1021:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:31:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1073:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1091:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1083:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1083:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "1095:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1102:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 75,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "1064:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "EmitStatement",
                  "src": "1059:50:1"
                }
              ]
            },
            "documentation": "@dev release dividends rights for a specified address\r\n@param _tokenId subtoken identifier\r\n@param _value uint the amount of tokens to be minted\r",
            "id": 85,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 51,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 50,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 214,
                  "src": "915:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "915:9:1"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "887:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "902:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "886:28:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "932:0:1"
            },
            "scope": 86,
            "src": "873:242:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 87,
        "src": "119:1001:1"
      }
    ],
    "src": "0:1120:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-04T12:25:39.546Z"
}